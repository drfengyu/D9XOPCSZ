private short[] convertInt32Toshort(int[] data) {
            float[] data1 = new float[data.Length];
            short[] data_short = new short[data.Length * 2];
            for (int i = 0; i < data.Length; i++)
            {
                byte[] buf = new byte[4];
                bool ok = ConvertIntToByteArray(data[i],ref buf);
                data1[i] = BitConverter.ToSingle(buf,0);
                data_short[i * 2] = Convert.ToInt16(data1[i]);
            }
            return data_short;
        }
        private short convertInt32Toshort(int data)
        {
            float data1;
            short data_short;
                byte[] buf = new byte[4];
                bool ok = ConvertIntToByteArray(data, ref buf);
                data1 = BitConverter.ToSingle(buf, 0);
                data_short = Convert.ToInt16(data1);
            return data_short;
        }

        private int convertInt32ToInt(int data)
        {
            float data1;
            int data_short;
            byte[] buf = new byte[4];
            bool ok = ConvertIntToByteArray(data, ref buf);
            data1 = BitConverter.ToSingle(buf, 0);
            data_short = Convert.ToInt32(data1);
            return data_short;
        }
        private bool ConvertIntToByteArray(int m, ref byte[] arry)
        {
            if (arry == null) { return false; }
            if (arry.Length<4)
            {
                return false;
            }
            arry[2] = (byte)(m & 0xFF);
            arry[3] = (byte)((m & 0xFF00)>>8);
            arry[0] = (byte)((m & 0xFF0000) >> 16);
            arry[1] = (byte)((m >> 24) & 0xFF);
            return true;
        }
/// <summary>
        /// float[] a, float[] b, float[] c, float[] d, float[] e, string FileName = ""
        /// </summary>
        /// <param name="a"></param>
        /// <param name="b"></param>
        /// <param name="c"></param>
        /// <param name="d"></param>
        /// <param name="e"></param>
        /// <param name="FileName"></param>
        private void IWrite(short[] A, short[] B, short[] C, short[] D, short[] E, string FileName = "")
        {

           //short[] A= convertFloatToShort(a);
           //short[] B = convertFloatToShort(b);
           //short[] C = convertFloatToShort(c);
          
            int i = 0;
            string time = "";
            switch (DateTime.Now.Hour)
            {
                case 8:

                case 20:
                    i = 0;
                    time = DateTime.Now.Hour == 8 ? "8:00-8:59" : "20:00-20:59";

                    break;
                case 9:
                case 21:
                    i = 2;
                    time = DateTime.Now.Hour == 9 ? "9:00-9:59" : "21:00-21:59";
                    break;
                case 10:
                case 22:
                    i = 4;
                    time = DateTime.Now.Hour == 10 ? "10:00-10:59" : "22:00-22:59";
                    break;
                case 11:
                case 23:
                    i = 6;
                    time = DateTime.Now.Hour == 11 ? "11:00-11:59" : "23:00-23:59";
                    break;
                case 12:
                case 0:
                    i = 8;
                    time = DateTime.Now.Hour == 12 ? "12:00-12:59" : "0:00-0:59";
                    break;
                case 13:
                case 1:
                    i = 10;
                    time = DateTime.Now.Hour == 13 ? "13:00-13:59" : "1:00-1:59";
                    break;
                case 14:
                case 2:
                    i = 12;
                    time = DateTime.Now.Hour == 14 ? "14:00-14:59" : "2:00-2:59";
                    break;
                case 15:
                case 3:
                    i = 14;
                    time = DateTime.Now.Hour == 15 ? "15:00-15:59" : "3:00-3:59";
                    break;
                case 16:
                case 4:
                    i = 16;
                    time = DateTime.Now.Hour == 16 ? "16:00-16:59" : "4:00-4:59";
                    break;
                case 17:
                case 5:
                    i = 18;
                    time = DateTime.Now.Hour == 17 ? "17:00-17:59" : "5:00-5:59";
                    break;
                case 18:
                case 6:
                    i = 20;
                    time = DateTime.Now.Hour == 18 ? "18:00-18:59" : "6:00-6:59";
                    break;
                case 19:
                case 7:
                    i = 22;
                    time = DateTime.Now.Hour == 19 ? "19:00-19:59" : "7:00-7:59";
                    break;
                default:
                    break;
            }
            //d
            if (D != null)
            {
                //short[] D = convertFloatToShort(d);
                //e
                if (E!= null)
                {
                    //short[] E = convertFloatToShort(e);
                    WriteCSV(time + "," + A[i] + "," + B[i] + "," + C[i] + "," + D[i] + "," + E[i], FileName);
                }
                else
                {
                    WriteCSV(time + "," + A[i] + "," + B[i] + "," + C[i] + "," + D[i] + ",", FileName);
                }

            }
            else
            {
                WriteCSV(time + "," + A[i] + "," + B[i] + "," + C[i], FileName);
            }


        }
        private void WriteI(string[] a, string FileName = "", InovanceTcpNet plc1 = null)
        {
            //I件 LC 成品 1# 2#焊接
            try
            {
                if (DateTime.Now.Hour >= 8 && DateTime.Now.Hour < 20)
                {
                    //DAY
                    //ok float  ReadFloat OperateResult<float[]> CountIEOK = plc1.ReadFloat(a[0], 12);
                    short[] CountIEOK =convertInt32Toshort(plc1.ReadInt32(a[0], 12).Content);
                    //ng OperateResult<float[]> CountIENG = plc1.ReadFloat(a[1], 12);

                    short[] CountIENG = convertInt32Toshort(plc1.ReadInt32(a[1], 12).Content);
                    //l OperateResult<float[]> CountIEL = plc1.ReadFloat(a[2], 12);
                    short[] CountIEL = convertInt32Toshort(plc1.ReadInt32(a[2], 12).Content);
                    //R OperateResult<float[]> CountIER = new OperateResult<float[]>();
                   
                    // OperateResult<float[]> CountIER = new OperateResult<float[]>();
                   short[] CountIER;
                    if (!string.IsNullOrEmpty(a[3]))
                    {
                        // CountIER = plc1.ReadFloat(a[3], 12);
                       CountIER = convertInt32Toshort(plc1.ReadInt32(a[3], 12).Content);
                        //LV
                        // OperateResult<float[]> CountIELV = new OperateResult<float[]>();
                        short[] CountIELV;
                        if (!string.IsNullOrEmpty(a[4]))
                        {
                            // CountIELV = plc1.ReadFloat(a[4], 12);
                            CountIELV = convertInt32Toshort(plc1.ReadInt32(a[4], 12).Content);
                            //IWrite(CountIEOK.Content, CountIENG.Content, CountIEL.Content, CountIER.Content, CountIELV.Content, FileName);
                            IWrite(CountIEOK, CountIENG, CountIEL, CountIER, CountIELV, FileName);
                        }
                        else
                        {
                            //IWrite(CountIEOK.Content, CountIENG.Content, CountIEL.Content, CountIER.Content, null, FileName);
                            IWrite(CountIEOK, CountIENG, CountIEL, CountIER, null, FileName);
                        }
                    }
                    else
                    {
                        //IWrite(CountIEOK.Content, CountIENG.Content, CountIEL.Content, null, null, FileName);
                        IWrite(CountIEOK, CountIENG, CountIEL, null, null, FileName);
                    }
                    if (DateTime.Now.Hour==19)
                    {
                        //写入总OK NG 良率
                        //TotalCountIOK
                        //OperateResult<float> TotalCountIOK = plc1.ReadFloat(a[10]);
                        short TotalCountIOK= convertInt32Toshort(plc1.ReadInt32(a[10]).Content);
                        //TotalCountING
                        // OperateResult<float> TotalCountING = plc1.ReadFloat(a[11]);
                        short TotalCountING = convertInt32Toshort(plc1.ReadInt32(a[11]).Content);
                        //TotalCountILV
                        // OperateResult<float> TotalCountILV = plc1.ReadFloat(a[12]);
                        short TotalCountILV = convertInt32Toshort(plc1.ReadInt32(a[12]).Content);
                        if (FileName.Contains("时间统计"))
                        {
                            // OperateResult<float> TotalTimeILV = plc1.ReadFloat(a[16]);
                            short TotalTimeILV = convertInt32Toshort(plc1.ReadInt32(a[16]).Content);
                            WriteCSV("合计," + Convert.ToDouble(TotalCountIOK) + "," + Convert.ToDouble(TotalCountING) + "," + Convert.ToDouble(TotalCountILV) + "," + Convert.ToDouble(TotalTimeILV), FileName);
                        }
                        else
                        {
                            WriteCSV("合计," + Convert.ToDouble(TotalCountIOK) + "," + Convert.ToDouble(TotalCountING) + "," + Convert.ToDouble(TotalCountILV), FileName);
                        }
                        
                    }
                }
                else
                {
                    //NIGHT
                    //ok
                   // OperateResult<float[]> CountIEOKN = plc1.ReadFloat(a[5], 12);
                    short[] CountIEOKN = convertInt32Toshort(plc1.ReadInt32(a[5], 12).Content);
                    //ng
                    //OperateResult<float[]> CountIENGN = plc1.ReadFloat(a[6], 12);
                    short[] CountIENGN = convertInt32Toshort(plc1.ReadInt32(a[6], 12).Content);
                    //l
                    //OperateResult<float[]> CountIELN = plc1.ReadFloat(a[7], 12);
                    short[] CountIELN = convertInt32Toshort(plc1.ReadInt32(a[7], 12).Content);
                    //R
                    // OperateResult<float[]> CountIERN = new OperateResult<float[]>();
                    short[] CountIERN;
                    if (!string.IsNullOrEmpty(a[8]))
                    {
                        //CountIERN = plc1.ReadFloat(a[8], 12);
                        CountIERN= convertInt32Toshort(plc1.ReadInt32(a[8], 12).Content);
                        //LV
                        //OperateResult<float[]> CountIELVN = new OperateResult<float[]>();
                        short[] CountIELVN;
                        if (!string.IsNullOrEmpty(a[9]))
                        {
                            // CountIELVN = plc1.ReadFloat(a[9], 12);
                            CountIELVN = convertInt32Toshort(plc1.ReadInt32(a[9], 12).Content);
                            //IWrite(CountIEOKN.Content, CountIENGN.Content, CountIELN.Content, CountIERN.Content, CountIELVN.Content, FileName);
                            IWrite(CountIEOKN, CountIENGN, CountIELN, CountIERN, CountIELVN, FileName);
                        }
                        else
                        {
                            IWrite(CountIEOKN, CountIENGN, CountIELN, CountIERN, null, FileName);
                        }
                    }
                    else
                    {
                        IWrite(CountIEOKN, CountIENGN, CountIELN, null, null, FileName);
                    }
                    if (DateTime.Now.Hour == 7)
                    {
                        //TotalCountIOK
                        //OperateResult<float> TotalCountIOKN = plc1.ReadFloat(a[13]);
                        short TotalCountIOKN = convertInt32Toshort(plc1.ReadInt32(a[13]).Content);
                        //TotalCountING
                        //OperateResult<float> TotalCountINGN = plc1.ReadFloat(a[14]);
                        short TotalCountINGN = convertInt32Toshort(plc1.ReadInt32(a[14]).Content);
                        //TotalCountILV
                        //OperateResult<float> TotalCountILVN = plc1.ReadFloat(a[15]);
                        short TotalCountILVN = convertInt32Toshort(plc1.ReadInt32(a[15]).Content);
                        if (FileName.Contains("时间统计"))
                        {
                            //OperateResult<float> TotalTimeILVN = plc1.ReadFloat(a[17]);
                            short TotalTimeILVN = convertInt32Toshort(plc1.ReadInt32(a[17]).Content);
                            WriteCSV("合计," + Convert.ToDouble(TotalCountIOKN) + "," + Convert.ToDouble(TotalCountINGN) + "," + Convert.ToDouble(TotalCountILVN) + "," + Convert.ToDouble(TotalTimeILVN), FileName);
                        }
                        else
                        {
                            WriteCSV("合计," + Convert.ToDouble(TotalCountIOKN) + "," + Convert.ToDouble(TotalCountINGN) + "," + Convert.ToDouble(TotalCountILVN), FileName);
                        }
                    }
                }



            }
            catch (Exception ex)
            {
                throw ex;
            }
        }